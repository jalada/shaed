# Using Shaed

## Mappings

In Shaed you can have many 'mappings'. These are translation rules from one
URL to another. Mappings are based on regular expressions with substitution
and also allow additional transformations based on the request e.g. overriding
or adding query string parameters.

For example you may have a mapping with the following properties:

<table class="table table-bordered table-striped">
  <thead>
    <tr>
      <th>Field</th>
      <th>Value</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Key (autogenerated)</td>
      <td>4f75765</td>
    </tr>
    <tr>
      <td>Source regex</td>
      <td><code>list/(.+)$</code></td>
    </tr>
    <tr>
      <td>Target URL</td>
      <td>http://api.example.com/lists/?id=$1</td>
    </tr>
    <tr>
      <td>TTL</td>
      <td>30</td>
    </tr>
    <tr>
      <td>Parameters</td>
      <td>{"key": "secret"}</td>
    </tr>
  </tbody>
</table>

And you make a request for
**http://my-shaed-router.herokuapp.com/4f75765/list/my-list**. The following 
transformations would occur:

1. Take the request URL and remove the key (after matching it).
2. Run the source regex over the remailing URL, which would match 'my-list' and
   set variable `$1` to that.
3. Construct the target URL, which would be
   http://api.example.com/lists/?id=**my-list**.
4. Add the key parameter.
5. The final request URL would become
   **http://api.example.com/lists/?id=my-list&key=secret**.
6. The response would be cached for 30 seconds, subsequent requests to the same
   URL would use the cached result.
